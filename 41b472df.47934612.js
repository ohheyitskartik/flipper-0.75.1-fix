(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{142:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return f}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),u=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=u(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},b=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(t),b=r,f=p["".concat(a,".").concat(b)]||p[b]||d[b]||o;return t?i.a.createElement(f,c(c({ref:n},s),{},{components:t})):i.a.createElement(f,c({ref:n},s))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=b;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<o;s++)a[s]=t[s];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},143:function(e,n,t){"use strict";t.r(n);var r=t(0),i=t(20);n.default=function(){var e=Object(r.useContext)(i.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},146:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return i})),t.d(n,"useAllPluginInstancesData",(function(){return o})),t.d(n,"usePluginData",(function(){return a}));var r=t(143);function i(){var e=Object(r.default)().globalData;if(!e)throw new Error("Docusaurus global data not found");return e}function o(e){var n=i()[e];if(!n)throw new Error("Docusaurus plugin global data not found for pluginName="+e);return n}function a(e,n){void 0===n&&(n="default");var t=o(e)[n];if(!t)throw new Error("Docusaurus plugin global data not found for pluginName="+e+" and pluginId="+n);return t}},148:function(e,n,t){(function(n){const r=["internal","external"];let i;try{i=t(146).usePluginData}catch(l){i=null}function o(e){return function(e){if("object"!=typeof e)throw new Error(`fbContent() args must be an object containing keys: ${r}. Instead got ${e}`);if(!Object.keys(e).find((e=>r.find((n=>n===e)))))throw new Error(`No valid args found in ${JSON.stringify(e)}. Accepted keys: ${r}`);const n=Object.keys(e).filter((e=>!r.find((n=>n===e))));if(n.length>0)throw new Error(`Unexpected keys ${n} found in fbContent() args. Accepted keys: ${r}`)}(e),c()?"internal"in e?a(e.internal):[]:"external"in e?a(e.external):[]}function a(e){return"function"==typeof e?e():e}function c(){return n.env.FB_INTERNAL||i&&i("internaldocs-fb").FB_INTERNAL}e.exports={fbContent:o,fbInternalOnly:function(e){return o({internal:e})},isInternal:c,FbInternalOnly:function(e){return c()?e.children:null},OssOnly:function(e){return c()?null:e.children}}}).call(this,t(149))},149:function(e,n){var t,r,i=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function c(e){if(t===setTimeout)return setTimeout(e,0);if((t===o||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:o}catch(e){t=o}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var l,s=[],u=!1,p=-1;function d(){u&&l&&(u=!1,l.length?s=l.concat(s):p=-1,s.length&&b())}function b(){if(!u){var e=c(d);u=!0;for(var n=s.length;n;){for(l=s,s=[];++p<n;)l&&l[p].run();p=-1,n=s.length}l=null,u=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(n){try{return r.call(null,e)}catch(n){return r.call(this,e)}}}(e)}}function f(e,n){this.fun=e,this.array=n}function m(){}i.nextTick=function(e){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];s.push(new f(e,n)),1!==s.length||u||c(b)},f.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(e){return[]},i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},150:function(e,n,t){"use strict";function r(e){var n,t,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(i&&(i+=" "),i+=t);else for(n in e)e[n]&&(i&&(i+=" "),i+=n);return i}n.a=function(){for(var e,n,t=0,i="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(i&&(i+=" "),i+=n);return i}},152:function(e,n,t){"use strict";var r=t(0),i=t(153);n.a=function(){var e=Object(r.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},153:function(e,n,t){"use strict";var r=t(0),i=Object(r.createContext)(void 0);n.a=i},155:function(e,n,t){"use strict";var r=t(0),i=t.n(r),o=t(152),a=t(150),c=t(55),l=t.n(c),s=37,u=39;n.a=function(e){var n=e.lazy,t=e.block,c=e.children,p=e.defaultValue,d=e.values,b=e.groupId,f=e.className,m=Object(o.a)(),g=m.tabGroupChoices,O=m.setTabGroupChoices,h=Object(r.useState)(p),y=h[0],j=h[1];if(null!=b){var v=g[b];null!=v&&v!==y&&d.some((function(e){return e.value===v}))&&j(v)}var w=function(e){j(e),null!=b&&O(b,e)},T=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(a.a)("tabs",{"tabs--block":t},f)},d.map((function(e){var n=e.value,t=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":y===n,className:Object(a.a)("tabs__item",l.a.tabItem,{"tabs__item--active":y===n}),key:n,ref:function(e){return T.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case u:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case s:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(T,e.target,e)},onFocus:function(){return w(n)},onClick:function(){w(n)}},t)}))),n?Object(r.cloneElement)(c.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},c.map((function(e,n){return Object(r.cloneElement)(e,{key:n,hidden:e.props.value!==y})}))))}},156:function(e,n,t){"use strict";var r=t(3),i=t(0),o=t.n(i);n.a=function(e){var n=e.children,t=e.hidden,i=e.className;return o.a.createElement("div",Object(r.a)({role:"tabpanel"},{hidden:t,className:i}),n)}},89:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return u})),t.d(n,"rightToc",(function(){return p})),t.d(n,"default",(function(){return g}));var r=t(3),i=t(7),o=(t(0),t(142)),a=t(155),c=t(156),l=t(148),s={id:"testing",title:"Testing"},u={unversionedId:"extending/testing",id:"extending/testing",isDocsHomePage:!1,title:"Testing",description:"Developer tools are only used if they work. We have built APIs to test plugins.",source:"@site/../docs/extending/testing.mdx",slug:"/extending/testing",permalink:"/docs/extending/testing",editUrl:"https://github.com/facebook/flipper/blob/master/website/../docs/extending/testing.mdx",version:"current",sidebar:"extending",previous:{title:"Plugin structure",permalink:"/docs/extending/desktop-plugin-structure"},next:{title:"Debugging",permalink:"/docs/extending/debugging"}},p=[{value:"Writing tests",id:"writing-tests",children:[]},{value:"Desktop plugins",id:"desktop-plugins",children:[]},{value:"Client plugins",id:"client-plugins",children:[]},{value:"Running (Flipper) tests",id:"running-flipper-tests",children:[{value:"Flipper Desktop",id:"flipper-desktop",children:[]},{value:"Flipper SDK",id:"flipper-sdk",children:[]},{value:"iOS",id:"ios",children:[]},{value:"React Native",id:"react-native",children:[]}]}],d=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",n)}},b=d("FbAndroidTesting"),f=d("FbIosTesting"),m={rightToc:p};function g(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},m,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Developer tools are only used if they work. We have built APIs to test plugins."),Object(o.b)("h2",{id:"writing-tests"},"Writing tests"),Object(o.b)("h2",{id:"desktop-plugins"},"Desktop plugins"),Object(o.b)("p",null,"Flipper uses ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://jestjs.io/"}),"Jest")," as unit testing framework."),Object(o.b)("p",null,"Writing unit tests for Flipper Desktop plugins is covered in detail in the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"../../docs/tutorial/js-custom#testing-plugin-logic"}),"tutorial"),". "),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"flipper-plugin")," package provide several ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"../../docs/extending/flipper-plugin#testutils"}),"test utilities")," to make testing more convenient. "),Object(o.b)("h2",{id:"client-plugins"},"Client plugins"),Object(o.b)(a.a,{defaultValue:"android",values:[{label:"Android",value:"android"},{label:"iOS",value:"ios"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"android",mdxType:"TabItem"},Object(o.b)(l.OssOnly,{mdxType:"OssOnly"},"Start by creating your first test file in this directory `MyFlipperPluginTest.java`. In the test method body we create our plugin which we want to test as well as a `FlipperConnectionMock`. In this contrived example we simply assert that our plugin's connected status is what we expect.",Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"@RunWith(RobolectricTestRunner.class)\npublic class MyFlipperPluginTest {\n\n  @Test\n  public void myTest() {\n    final MyFlipperPlugin plugin = new MyFlipperPlugin();\n    final FlipperConnectionMock connection = new FlipperConnectionMock();\n\n    plugin.onConnect(connection);\n    assertThat(plugin.connected(), equalTo(true));\n  }\n}\n")),Object(o.b)("p",null,"There are two mock classes that are used to construct tests ",Object(o.b)("inlineCode",{parentName:"p"},"FlipperConnectionMock")," and ",Object(o.b)("inlineCode",{parentName:"p"},"FlipperResponderMock"),". Together these can be used to write very powerful tests to verify the end to end behavior of your plugin. For example we can test if for a given incoming message our plugin responds as we expect."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void myTest() {\n  final MyFlipperPlugin plugin = new MyFlipperPlugin();\n  final FlipperConnectionMock connection = new FlipperConnectionMock();\n  final FlipperResponderMock responder = new FlipperResponderMock();\n\n  plugin.onConnect(connection);\n\n  final FlipperObject params = new FlipperObject.Builder()\n      .put("phrase", "flipper")\n      .build();\n  connection.receivers.get("myMethod").onReceive(params, responder);\n\n  assertThat(responder.successes, hasItem(\n      new FlipperObject.Builder()\n          .put("phrase", "ranos")\n          .build()));\n}\n'))),Object(o.b)(b,{mdxType:"FbAndroidTesting"})),Object(o.b)(c.a,{value:"ios",mdxType:"TabItem"},Object(o.b)(l.OssOnly,{mdxType:"OssOnly"},Object(o.b)("p",null,"Start by creating your first test file in this directory ",Object(o.b)("inlineCode",{parentName:"p"},"MyFlipperPluginTests.cpp")," and import the testing utilities from ",Object(o.b)("inlineCode",{parentName:"p"},"fbsource//xplat/sonar/xplat:FlipperTestLib"),". These utilities mock out core pieces of the communication channel so that you can test your plugin in isolation."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"#include <MyFlipperPlugin/MyFlipperPlugin.h>\n#include <FlipperTestLib/FlipperConnectionMock.h>\n#include <FlipperTestLib/FlipperResponderMock.h>\n\n#include <folly/json.h>\n#include <gtest/gtest.h>\n\nnamespace facebook {\nnamespace flipper {\nnamespace test {\n\nTEST(MyFlipperPluginTests, testDummy) {\n  EXPECT_EQ(1 + 1, 2);\n}\n\n} // namespace test\n} // namespace flipper\n} // namespace facebook\n")),Object(o.b)("p",null,"Here is a simple test using these mock utilities to create a plugin, send some data, and assert that the result is as expected."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),'TEST(MyFlipperPluginTests, testDummy) {\n  std::vector<folly::dynamic> successfulResponses;\n  auto responder = std::make_unique<FlipperResponderMock>(&successfulResponses);\n  auto conn = std::make_shared<FlipperConnectionMock>();\n\n  MyFlipperPlugin plugin;\n  plugin.didConnect(conn);\n\n  folly::dynamic message = folly::dynamic::object("param1", "hello");\n  folly::dynamic expectedResponse = folly::dynamic::object("response", "Hi there");\n\n  auto receiver = conn->receivers_["someMethod"];\n  receiver(message, std::move(responder));\n\n  EXPECT_EQ(successfulResponses.size(), 1);\n  EXPECT_EQ(successfulResponses.back(), expectedResponse);\n}\n'))),Object(o.b)(f,{mdxType:"FbIosTesting"}))),Object(o.b)("h2",{id:"running-flipper-tests"},"Running (Flipper) tests"),Object(o.b)("h3",{id:"flipper-desktop"},"Flipper Desktop"),Object(o.b)(l.OssOnly,{mdxType:"OssOnly"},Object(o.b)("p",null,"Run ",Object(o.b)("inlineCode",{parentName:"p"},"yarn jest")," or ",Object(o.b)("inlineCode",{parentName:"p"},"yarn jest --watch")," in the ",Object(o.b)("inlineCode",{parentName:"p"},"desktop")," directory of your Flipper checkout.")),Object(o.b)(l.FbInternalOnly,{mdxType:"FbInternalOnly"},Object(o.b)("p",null,"Run ",Object(o.b)("inlineCode",{parentName:"p"},"yarn jest")," or ",Object(o.b)("inlineCode",{parentName:"p"},"yarn jest --watch")," in ",Object(o.b)("inlineCode",{parentName:"p"},"~/fbsource/xplat/sonar/desktop"))),Object(o.b)("h3",{id:"flipper-sdk"},"Flipper SDK"),Object(o.b)("h4",{id:"android-java"},"Android (Java)"),Object(o.b)(l.OssOnly,{mdxType:"OssOnly"},Object(o.b)("h5",{id:"gradle"},"Gradle:"),Object(o.b)("p",null,"In the root directory of the checkout:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"./gradlew android:test\n"))),Object(o.b)(l.FbInternalOnly,{mdxType:"FbInternalOnly"},Object(o.b)("h5",{id:"gradle-1"},"Gradle:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"cd fbsource/xplat/sonar\n./gradlew android:test\n")),Object(o.b)("h5",{id:"buck"},"Buck:"),Object(o.b)("p",null,"I don't know of a way to run them locally \ud83d\ude1e Make a change and submit a diff."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"buck test ...")," should work, but doesn't seem to when run in xplat on mac but they do work on mobile on demand, if you use @mode/server."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Debugging note: They do work if you copy the files and BUCK file to")," ",Object(o.b)("inlineCode",{parentName:"p"},"fbandroid/javatests")," ",Object(o.b)("em",{parentName:"p"},"and change the rule from")," ",Object(o.b)("inlineCode",{parentName:"p"},"sonar_android_test")," ",Object(o.b)("em",{parentName:"p"},"to")," ",Object(o.b)("inlineCode",{parentName:"p"},"robolectric3_test"))),Object(o.b)(l.FbInternalOnly,{mdxType:"FbInternalOnly"},Object(o.b)("h3",{id:"ios"},"iOS"),Object(o.b)("p",null,"Focus on the plugins, or flipper code you want but with the --with-tests param."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"arc focus ... --with-tests")),Object(o.b)("p",null,"Then click the <-> icon  in xcode and you can run them there.")),Object(o.b)("h3",{id:"react-native"},"React Native"),Object(o.b)("p",null,"See ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"testing-rn"}),"testing React Native"),"."))}g.isMDXComponent=!0}}]);